{"ast":null,"code":"var _jsxFileName = \"/Users/christineatherholt/movies_search/src/components/search-results.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport MovieRow from \"./movie-row.js\";\nimport $ from \"jquery\";\nexport default class SearchResults extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}; //console.log(\"this is my initalizer\");\n    // const movies = [\n    //     { id: 0, poster_src: \"https://image.tmdb.org/t/p/w1280/uuitWHpJwxD1wruFl2nZHIb4UGN.jpg\", title: \"movie title 1\", overview: \"movie summary  1\" },\n    //     { id: 1, poster_src: \"https://image.tmdb.org/t/p/w1280/qcr9bBY6MVeLzriKCmJOv1562uY.jpg\", title: \"movie title 2\", overview: \"movie summary  2\" },\n    // ]\n    // let movieRows = [];\n    // movies.forEach((movie) => {\n    //     console.log(movie.title)\n    //     const movieRow = <MovieRow movie={movie} />\n    //     movieRows.push(movieRow)\n    // });\n    // this.state = { rows: movieRows }\n\n    this.performSearch(\"woman\");\n  }\n\n  performSearch(searchTerm) {\n    console.log(\"perform search using movieDB\");\n    const urlString = \"https://api.themoviedb.org/3/search/movie?api_key=ab0daf48e5c9f6b2513a909b48005ede&query=\" + searchTerm;\n    $.ajax({\n      url: urlString,\n      success: searchResults => {\n        console.log(\"fetched data successfully\"); //console.log(searchResults);\n\n        const results = searchResults.results; //console.log(results[0])\n\n        let movieRows = [];\n        results.forEach(movie => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w1280\" + movie.poster_path; //console.log(movie.poster_path);\n\n          const movieRow = /*#__PURE__*/React.createElement(MovieRow, {\n            key: movie.id,\n            movie: movie,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 38\n            }\n          });\n          movieRows.push(movieRow);\n        });\n        this.setState({\n          rows: movieRows\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"fetched data UNsuccessfully\");\n      }\n    });\n  }\n\n  searchChangeHandler(event) {\n    console.log(event.target.value);\n    const searchTerm = event.target.value;\n    this.performSearch(searchTerm);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search-bar\",\n      onChange: this.searchChangeHandler.bind(this),\n      placeholder: \"Enter search term\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), this.state.rows);\n  }\n\n}","map":{"version":3,"sources":["/Users/christineatherholt/movies_search/src/components/search-results.js"],"names":["React","Component","axios","MovieRow","$","SearchResults","constructor","props","state","performSearch","searchTerm","console","log","urlString","ajax","url","success","searchResults","results","movieRows","forEach","movie","poster_src","poster_path","movieRow","id","push","setState","rows","error","xhr","status","err","searchChangeHandler","event","target","value","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,eAAe,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACjDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb,CAFe,CAGf;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAAKC,aAAL,CAAmB,OAAnB;AAGH;;AAEDA,EAAAA,aAAa,CAACC,UAAD,EAAa;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AAEA,UAAMC,SAAS,GAAG,8FAA8FH,UAAhH;AAEAN,IAAAA,CAAC,CAACU,IAAF,CAAO;AACHC,MAAAA,GAAG,EAAEF,SADF;AAEHG,MAAAA,OAAO,EAAGC,aAAD,IAAmB;AACxBN,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EADwB,CAExB;;AACA,cAAMM,OAAO,GAAGD,aAAa,CAACC,OAA9B,CAHwB,CAIxB;;AAEA,YAAIC,SAAS,GAAG,EAAhB;AAEAD,QAAAA,OAAO,CAACE,OAAR,CAAiBC,KAAD,IAAW;AACvBA,UAAAA,KAAK,CAACC,UAAN,GAAmB,qCAAqCD,KAAK,CAACE,WAA9D,CADuB,CAEvB;;AACA,gBAAMC,QAAQ,gBAAG,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAEH,KAAK,CAACI,EAArB;AAAyB,YAAA,KAAK,EAAEJ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB;AACAF,UAAAA,SAAS,CAACO,IAAV,CAAeF,QAAf;AACH,SALD;AAOA,aAAKG,QAAL,CAAc;AAACC,UAAAA,IAAI,EAAET;AAAP,SAAd;AACH,OAlBE;AAmBHU,MAAAA,KAAK,EAAE,CAACC,GAAD,EAAMC,MAAN,EAAcC,GAAd,KAAsB;AACzBrB,QAAAA,OAAO,CAACkB,KAAR,CAAc,6BAAd;AACH;AArBE,KAAP;AAuBH;;AAEDI,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACvBvB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACA,UAAM1B,UAAU,GAAGwB,KAAK,CAACC,MAAN,CAAaC,KAAhC;AACA,SAAK3B,aAAL,CAAmBC,UAAnB;AACH;;AAED2B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,QAAQ,EAAE,KAAKJ,mBAAL,CAAyBK,IAAzB,CAA8B,IAA9B,CAAxC;AAA6E,MAAA,WAAW,EAAC,mBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGG,KAAK9B,KAAL,CAAWoB,IAHd,CADJ;AAOH;;AAtEgD","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport MovieRow from \"./movie-row.js\"\nimport $ from \"jquery\"\n\nexport default class SearchResults extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {};\n        //console.log(\"this is my initalizer\");\n\n        // const movies = [\n        //     { id: 0, poster_src: \"https://image.tmdb.org/t/p/w1280/uuitWHpJwxD1wruFl2nZHIb4UGN.jpg\", title: \"movie title 1\", overview: \"movie summary  1\" },\n        //     { id: 1, poster_src: \"https://image.tmdb.org/t/p/w1280/qcr9bBY6MVeLzriKCmJOv1562uY.jpg\", title: \"movie title 2\", overview: \"movie summary  2\" },\n        // ]\n\n        // let movieRows = [];\n\n        // movies.forEach((movie) => {\n        //     console.log(movie.title)\n        //     const movieRow = <MovieRow movie={movie} />\n        //     movieRows.push(movieRow)\n        // });\n\n        // this.state = { rows: movieRows }\n\n        this.performSearch(\"woman\");\n\n        \n    }\n\n    performSearch(searchTerm) {\n        console.log(\"perform search using movieDB\")\n\n        const urlString = \"https://api.themoviedb.org/3/search/movie?api_key=ab0daf48e5c9f6b2513a909b48005ede&query=\" + searchTerm;\n\n        $.ajax({\n            url: urlString,\n            success: (searchResults) => {\n                console.log(\"fetched data successfully\");\n                //console.log(searchResults);\n                const results = searchResults.results;\n                //console.log(results[0])\n\n                let movieRows = [];\n\n                results.forEach((movie) => {\n                    movie.poster_src = \"https://image.tmdb.org/t/p/w1280\" + movie.poster_path;\n                    //console.log(movie.poster_path);\n                    const movieRow = <MovieRow key={movie.id} movie={movie} />\n                    movieRows.push(movieRow)\n                });\n\n                this.setState({rows: movieRows})\n            },\n            error: (xhr, status, err) => {\n                console.error(\"fetched data UNsuccessfully\");\n            }\n        })\n    };\n\n    searchChangeHandler(event) {\n        console.log(event.target.value);\n        const searchTerm = event.target.value;\n        this.performSearch(searchTerm);\n    }\n\n    render() {\n        return (\n            <div>\n                <input className=\"search-bar\" onChange={this.searchChangeHandler.bind(this)} placeholder=\"Enter search term\" />\n\n              {this.state.rows}\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}